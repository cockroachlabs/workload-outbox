-- Create database
\benchmark once \name 3_init
DROP DATABASE IF EXISTS loadtest; CREATE DATABASE loadtest; USE loadtest;CREATE TABLE outbox_event (message_key UUID NOT NULL, created_date TIMESTAMPTZ NOT NULL DEFAULT current_timestamp():::TIMESTAMPTZ, updated_date TIMESTAMPTZ NOT NULL DEFAULT current_timestamp():::TIMESTAMPTZ, metadata_outbox_published_date TIMESTAMPTZ NOT NULL, metadata_created_date TIMESTAMPTZ NOT NULL, metadata_updated_date TIMESTAMPTZ NOT NULL, metadata_event_type VARCHAR(100) NOT NULL, metadata_event_type_key_name VARCHAR(100) NOT NULL, event_metadata_version VARCHAR(100) NOT NULL, message BYTES NULL, message_json JSONB NOT NULL, avro_schema JSONB NOT NULL, freebnort_key UUID NULL, producing_region VARCHAR(100) NOT NULL, producing_service VARCHAR(100) NOT NULL, producing_datetime TIMESTAMPTZ NULL, message_checksum_algorithm VARCHAR(100) NULL, message_checksum VARCHAR(100) NULL, topic_name VARCHAR(100) NOT NULL, subject VARCHAR(100) NOT NULL, status VARCHAR(64) NOT NULL, attempts INT8 NOT NULL DEFAULT 0:::INT8, iterval INT8 NULL, CONSTRAINT message_key_pkey PRIMARY KEY (message_key ASC), INDEX outbox_event_message_key_index (message_key ASC), INDEX outbox_event_topic_name_created_date (topic_name ASC, created_date ASC), INDEX outbox_event_status_index_status_created_date (status ASC, created_date ASC), INDEX outbox_event_iterval (iterval), FAMILY "primary" (message_key, created_date, updated_date, metadata_outbox_published_date, metadata_created_date, metadata_updated_date, metadata_event_type, metadata_event_type_key_name, event_metadata_version, message, message_json, avro_schema, freebnort_key, producing_region, producing_service, producing_datetime, message_checksum_algorithm, message_checksum, topic_name, subject, status, attempts), CONSTRAINT status_chk CHECK (status IN ('PENDING':::STRING, 'DONE':::STRING, 'FAILED':::STRING)));

\benchmark loop \name 3_insert
USE loadtest; INSERT INTO outbox_event (message_key, created_date, updated_date, metadata_outbox_published_date, metadata_created_date, metadata_updated_date, metadata_event_type, metadata_event_type_key_name, event_metadata_version, message, message_json, avro_schema, freebnort_key, producing_region, producing_service, producing_datetime, message_checksum_algorithm, message_checksum, topic_name, subject, status, attempts, iterval) VALUES (gen_random_uuid(), '2020-10-05 14:03:30.882077+00:00', '2020-10-06 14:08:11.633+00:00', '2020-10-05 14:03:31.058+00:00', '2020-10-05 14:03:31.058+00:00', '2020-10-05 14:03:31.058+00:00', 'UPDATE', 'DINGBAT_KEY', '1.0.0', '\x00000009814830303030303064362d363162612d343366362d613933392d356230643432373838623964e4cd98919f5de4cd98919f5de4cd98919f5d0c5550444154451e5452414e53414354494f4e5f4b45590a312e302e304835656338626138312d316335632d343464302d623635362d3436333731316234633436394833353065626130622d636533392d343363662d393839392d6138363362616637613631394839363064343261382d323166622d343636352d616463332d6261646430626434303661320000042ee006474250020807270e00f086d0949f5d00e4cd98919f5d10415050524f5645440e4341494e3030321c504d4e542e434352442e4543544c12434152445f415554481a6c65646765726d616e61676572023e7b2274797065223a22434152445f41555448222c2275726c223a6e756c6c7d02f8117b2274797065223a224341494e303032222c226d657373616765223a7b2250414e5f4e554d424552223a2231323334222c225452414e53414354494f4e5f44415445223a22323032302d31302d30355431353a30333a33312e3030302b30303030222c224d45524348414e545f43415445474f52595f434f4445223a2235393132222c2243555252454e43595f434f44455f43415244223a22474250222c22434152445f4143434550544f525f434f4e444954494f4e5f434f4445223a6e756c6c2c2245584348414e47455f52415445223a312e302c22415554484f5249534154494f4e5f434f4445223a22353834323434222c22434152445f544f4b454e223a2239313630383938363636323837373936222c224c4946454359434c455f4944223a2237343465363438622d313064612d343162612d616631312d616337346235636633643164222c22434152445f4143434550544f525f504f53545f434f4445223a6e756c6c2c2256414c55455f44415445223a22323032302d31302d30355431353a30333a33312e3030302b30303030222c22494e49544941544f525f50415254595f4944223a224d4343222c225452414e53414354494f4e5f54595045223a2243524450222c2243415244484f4c4445525f50524553454e54223a747275652c22434152445f4143434550544f525f43495459223a224c4f4e444f4e222c225452414e53414354494f4e5f524553504f4e53455f434f4445223a2241505052222c225452414e53414354494f4e5f414d4f554e545f5155414c4946494552223a224143544c222c22414d4f554e54223a22312e3132222c22434152445f4143434550544f525f4e414d45223a224143512041544d222c225452414e53414354494f4e5f54494d45223a2231353a30333a3331222c22434152445f444154415f454e5452595f4d4f4445223a2243494343222c225452414e53414354494f4e5f43555252454e43595f434f4445223a22474250222c22544f54414c5f414d4f554e54223a223132222c2242414e4b4e45545f5245464552454e43455f4e554d424552223a224a344e454a4b505946227d2c226164646974696f6e616c496e666f223a7b2244454249545f4352454449545f494e44494341544f52223a224445424954222c225452414e53414354494f4e5f434f4445223a22504d4e542e434352442e4543544c222c2250415254595f4b4559223a2237393762633963362d663438612d343333612d393838302d613634353534373337393532222c2250524f445543545f4b4559223a2266353730393432352d643462312d343066352d383263612d303661626364656662333063222c225041594d454e545f4d4554484f445f54595045223a22434f4e544143544c4553535f5354414e444152445f444f4d4553544943222c22535542534352495054494f4e5f4b4559223a2239363064343261382d323166622d343636352d616463332d626164643062643430366132222c225452414e53414354494f4e5f4944223a2235656338626138312d316335632d343464302d623635362d343633373131623463343639227d7d02a8047b225452414e53414354494f4e5f434f5252454c4154494f4e5f4944223a2233353065626130622d636533392d343363662d393839392d613836336261663761363139222c22524551554553545f4944223a22303166356665373030652d383036332d343636652d396238322d38356263386162386135336231363031393036363130313635222c2254454e414e545f50415254595f4b4559223a223130303030222c22415641494c41424c455f42414c414e4345223a33323331302e38312c224944454d504f54454e43595f4b4559223a226234303465656239366366386361306264373163663834616364326135633562222c225452414e53414354494f4e5f535441545553223a2253554343455353227d024830303030303064362d363162612d343366362d613933392d356230643432373838623964e4cd98919f5de4cd98919f5de4cd98919f5d0c5550444154451e5452414e53414354494f4e5f4b45590a312e302e30024835656338626138312d316335632d343464302d623635362d3436333731316234633436394833353065626130622d636533392d343363662d393839392d6138363362616637613631394839363064343261382d323166622d343636352d616463332d6261646430626434303661320000042ee006474250020807270e00f086d0949f5d00e4cd98919f5d10415050524f5645440e4341494e3030321c504d4e542e434352442e4543544c12434152445f415554481a6c65646765726d616e61676572023e7b2274797065223a22434152445f41555448222c2275726c223a6e756c6c7d02f8117b2274797065223a224341494e303032222c226d657373616765223a7b2250414e5f4e554d424552223a2231323334222c225452414e53414354494f4e5f44415445223a22323032302d31302d30355431353a30333a33312e3030302b30303030222c224d45524348414e545f43415445474f52595f434f4445223a2235393132222c2243555252454e43595f434f44455f43415244223a22474250222c22434152445f4143434550544f525f434f4e444954494f4e5f434f4445223a6e756c6c2c2245584348414e47455f52415445223a312e302c22415554484f5249534154494f4e5f434f4445223a22353834323434222c22434152445f544f4b454e223a2239313630383938363636323837373936222c224c4946454359434c455f4944223a2237343465363438622d313064612d343162612d616631312d616337346235636633643164222c22434152445f4143434550544f525f504f53545f434f4445223a6e756c6c2c2256414c55455f44415445223a22323032302d31302d30355431353a30333a33312e3030302b30303030222c22494e49544941544f525f50415254595f4944223a224d4343222c225452414e53414354494f4e5f54595045223a2243524450222c2243415244484f4c4445525f50524553454e54223a747275652c22434152445f4143434550544f525f43495459223a224c4f4e444f4e222c225452414e53414354494f4e5f524553504f4e53455f434f4445223a2241505052222c225452414e53414354494f4e5f414d4f554e545f5155414c4946494552223a224143544c222c22414d4f554e54223a22312e3132222c22434152445f4143434550544f525f4e414d45223a224143512041544d222c225452414e53414354494f4e5f54494d45223a2231353a30333a3331222c22434152445f444154415f454e5452595f4d4f4445223a2243494343222c225452414e53414354494f4e5f43555252454e43595f434f4445223a22474250222c22544f54414c5f414d4f554e54223a223132222c2242414e4b4e45545f5245464552454e43455f4e554d424552223a224a344e454a4b505946227d2c226164646974696f6e616c496e666f223a7b2244454249545f4352454449545f494e44494341544f52223a224445424954222c225452414e53414354494f4e5f434f4445223a22504d4e542e434352442e4543544c222c2250415254595f4b4559223a2237393762633963362d663438612d343333612d393838302d613634353534373337393532222c2250524f445543545f4b4559223a2266353730393432352d643462312d343066352d383263612d303661626364656662333063222c225041594d454e545f4d4554484f445f54595045223a22434f4e544143544c4553535f5354414e444152445f444f4d4553544943222c22535542534352495054494f4e5f4b4559223a2239363064343261382d323166622d343636352d616463332d626164643062643430366132222c225452414e53414354494f4e5f4944223a2235656338626138312d316335632d343464302d623635362d343633373131623463343639227d7d02a8047b225452414e53414354494f4e5f434f5252454c4154494f4e5f4944223a2233353065626130622d636533392d343363662d393839392d613836336261663761363139222c22524551554553545f4944223a22303166356665373030652d383036332d343636652d396238322d38356263386162386135336231363031393036363130313635222c2254454e414e545f50415254595f4b4559223a223130303030222c22415641494c41424c455f42414c414e4345223a33323331302e38312c224944454d504f54454e43595f4b4559223a226234303465656239366366386361306264373163663834616364326135633562222c225452414e53414354494f4e5f535441545553223a2253554343455353227d00', e'{"additional_info_json": {"string": "{\\"DINGBAT_RELATION_ID\\":\\"350eba0b-ce39-43cf-9899-a863baf7a619\\",\\"ASK_ID\\":\\"01f5fe700e-8063-466e-9b82-85bc8ab8a53b1601906610165\\",\\"LESSEE_FESTIVAL_KEY\\":\\"10000\\",\\"LE_BALANCE\\":32310.81,\\"UNIQUE_KEY\\":\\"b404eeb96cf8ca0bd71cf84acd2a5c5b\\",\\"DINGBAT_STATUS\\":\\"SUCCESS\\"}"}, "amount": ".\u00E0", "business_data_payload": {"com.wobbles.event.corehard.brouhaha.dingbat.ClientDingbatDingbatPayload": {"additional_info_json": {"string": "{\\"DINGBAT_RELATION_ID\\":\\"350eba0b-ce39-43cf-9899-a863baf7a619\\",\\"ASK_ID\\":\\"01f5fe700e-8063-466e-9b82-85bc8ab8a53b1601906610165\\",\\"LESSEE_FESTIVAL_KEY\\":\\"10000\\",\\"LE_BALANCE\\":32310.81,\\"UNIQUE_KEY\\":\\"b404eeb96cf8ca0bd71cf84acd2a5c5b\\",\\"DINGBAT_STATUS\\":\\"SUCCESS\\"}"}, "amount": ".\u00E0", "relation_key": "350eba0b-ce39-43cf-9899-a863baf7a619", "latency": "GBP", "header_json": {"string": "{\\"type\\":\\"BELL_AUTH\\",\\"url\\":null}"}, "is_emu": false, "json": {"string": "{\\"type\\":\\"ABEL002\\",\\"message\\":{\\"POT_NUMBER\\":\\"1234\\",\\"DINGBAT_DATE\\":\\"2020-10-05T15:03:31.000+0000\\",\\"SALES_CATEGORY_CODE\\":\\"5912\\",\\"LATENCY_CODE_BELL\\":\\"GBP\\",\\"BELL_ACCEPTOR_CONDITION_CODE\\":null,\\"EXCHANGE_RATE\\":1.0,\\"ENIGMA_CODE\\":\\"584244\\",\\"BELL_TOKEN\\":\\"9160898666287796\\",\\"LIFECYCLE_ID\\":\\"744e648b-10da-41ba-af11-ac74b5cf3d1d\\",\\"BELL_ACCEPTOR_POST_CODE\\":null,\\"VALUE_DATE\\":\\"2020-10-05T15:03:31.000+0000\\",\\"INITIATOR_FESTIVAL_ID\\":\\"MCC\\",\\"DINGBAT_TYPE\\":\\"CRDP\\",\\"BELLHOLDER_PRESENT\\":true,\\"BELL_ACCEPTOR_CITY\\":\\"LONDON\\",\\"DINGBAT_RESPONSE_CODE\\":\\"APPR\\",\\"DINGBAT_AMOUNT_QUALIFIER\\":\\"ACTL\\",\\"AMOUNT\\":\\"1.12\\",\\"BELL_ACCEPTOR_NAME\\":\\"ACQ AOC\\",\\"DINGBAT_TIME\\":\\"15:03:31\\",\\"BELL_DATA_ENTRY_MODE\\":\\"THICC\\",\\"DINGBAT_LATENCY_CODE\\":\\"GBP\\",\\"TOTAL_AMOUNT\\":\\"12\\",\\"RAILNET_REFERENCE_NUMBER\\":\\"J4NEJKPYF\\"},\\"additionalInfo\\":{\\"WOMBAT_EMU_INDICATOR\\":\\"WOMBAT\\",\\"DINGBAT_CODE\\":\\"AMNT.ACRD.ACTL\\",\\"FESTIVAL_KEY\\":\\"797bc9c6-f48a-433a-9880-a64554737952\\",\\"PRODUCT_KEY\\":\\"f5709425-d4b1-40f5-82ca-06abcdefb30c\\",\\"ERUDITE_METHOD_TYPE\\":\\"LESS_STANDARD_DOMESTIC\\",\\"FREEBNORT_KEY\\":\\"960d42a8-21fb-4665-adc3-badd0bd406a2\\",\\"DINGBAT_ID\\":\\"5ec8ba81-1c5c-44d0-b656-463711b4c469\\"}}"}, "last_updated_by": "brouhaha", "linked_dingbat_id": null, "posted_balance": {"bytes": "\\u0007\'\\u000e\\u0000"}, "posted_timestamp_utc": 1601906611058, "state": "APPROVED", "freebnort_key": "960d42a8-21fb-4665-adc3-badd0bd406a2", "bell_key": null, "dingbat_code": "AMNT.ACRD.ACTL", "dingbat_key": "5ec8ba81-1c5c-44d0-b656-463711b4c469", "dingbat_msg_type": "BELL_AUTH", "dingbat_timestamp_utc": 1601910211000, "type": "ABEL002", "value_timestamp_utc": null}}, "relation_key": "350eba0b-ce39-43cf-9899-a863baf7a619", "created_date": 1601906611058, "latency": "GBP", "event_metadata_version": "1.0.0", "event_type": "UPDATE", "event_type_key_name": "DINGBAT_KEY", "header_json": {"string": "{\\"type\\":\\"BELL_AUTH\\",\\"url\\":null}"}, "is_emu": false, "json": {"string": "{\\"type\\":\\"ABEL002\\",\\"message\\":{\\"POT_NUMBER\\":\\"1234\\",\\"DINGBAT_DATE\\":\\"2020-10-05T15:03:31.000+0000\\",\\"SALES_CATEGORY_CODE\\":\\"5912\\",\\"LATENCY_CODE_BELL\\":\\"GBP\\",\\"BELL_ACCEPTOR_CONDITION_CODE\\":null,\\"EXCHANGE_RATE\\":1.0,\\"ENIGMA_CODE\\":\\"584244\\",\\"BELL_TOKEN\\":\\"9160898666287796\\",\\"LIFECYCLE_ID\\":\\"744e648b-10da-41ba-af11-ac74b5cf3d1d\\",\\"BELL_ACCEPTOR_POST_CODE\\":null,\\"VALUE_DATE\\":\\"2020-10-05T15:03:31.000+0000\\",\\"INITIATOR_FESTIVAL_ID\\":\\"MCC\\",\\"DINGBAT_TYPE\\":\\"CRDP\\",\\"BELLHOLDER_PRESENT\\":true,\\"BELL_ACCEPTOR_CITY\\":\\"LONDON\\",\\"DINGBAT_RESPONSE_CODE\\":\\"APPR\\",\\"DINGBAT_AMOUNT_QUALIFIER\\":\\"ACTL\\",\\"AMOUNT\\":\\"1.12\\",\\"BELL_ACCEPTOR_NAME\\":\\"ACQ AOC\\",\\"DINGBAT_TIME\\":\\"15:03:31\\",\\"BELL_DATA_ENTRY_MODE\\":\\"THICC\\",\\"DINGBAT_LATENCY_CODE\\":\\"GBP\\",\\"TOTAL_AMOUNT\\":\\"12\\",\\"RAILNET_REFERENCE_NUMBER\\":\\"J4NEJKPYF\\"},\\"additionalInfo\\":{\\"WOMBAT_EMU_INDICATOR\\":\\"WOMBAT\\",\\"DINGBAT_CODE\\":\\"AMNT.ACRD.ACTL\\",\\"FESTIVAL_KEY\\":\\"797bc9c6-f48a-433a-9880-a64554737952\\",\\"PRODUCT_KEY\\":\\"f5709425-d4b1-40f5-82ca-06abcdefb30c\\",\\"ERUDITE_METHOD_TYPE\\":\\"LESS_STANDARD_DOMESTIC\\",\\"FREEBNORT_KEY\\":\\"960d42a8-21fb-4665-adc3-badd0bd406a2\\",\\"DINGBAT_ID\\":\\"5ec8ba81-1c5c-44d0-b656-463711b4c469\\"}}"}, "last_updated_by": "brouhaha", "linked_dingbat_id": null, "message_key": "000000d6-61ba-43f6-a939-5b0d42788b9d", "metadata": {"com.wobbles.event.corehard.brouhaha.dingbat.ClientEventMetadata": {"created_date": 1601906611058, "event_metadata_version": "1.0.0", "event_type": "UPDATE", "event_type_key_name": "DINGBAT_KEY", "message_key": "000000d6-61ba-43f6-a939-5b0d42788b9d", "outbox_published_date": 1601906611058, "updated_date": 1601906611058}}, "outbox_published_date": 1601906611058, "posted_balance": {"bytes": "\\u0007\'\\u000e\\u0000"}, "posted_timestamp_utc": 1601906611058, "state": "APPROVED", "freebnort_key": "960d42a8-21fb-4665-adc3-badd0bd406a2", "dingbat_code": "AMNT.ACRD.ACTL", "dingbat_key": "5ec8ba81-1c5c-44d0-b656-463711b4c469", "dingbat_msg_type": "BELL_AUTH", "dingbat_timestamp_utc": 1601910211000, "type": "ABEL002", "updated_date": 1601906611058, "value_timestamp_utc": null}', e'{"doc": "This event holds the customer view of the brouhaha and shows the customer dingbats on a freebnort", "fields": [{"doc": "Denotes the unique key for the message from this topic", "logicalType": "uuid", "name": "message_key", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "Timestamp value associated with the commit point in the platform when the message was committed to the service outbox pattern prior to publication to Kafka", "name": "outbox_published_date", "type": {"logicalType": "timestamp-millis", "type": "long"}}, {"doc": "The service timestamp value associated with the commit point in the platform database giving rise to the INSERT operation recorded in \'milliseconds since epoch\' format", "name": "created_date", "type": {"logicalType": "timestamp-millis", "type": "long"}}, {"doc": "The service timestamp value associated with the commit point in the platform database giving rise to the UPDATE or INSERT operation recorded in \'milliseconds since epoch\' format", "name": "updated_date", "type": {"logicalType": "timestamp-millis", "type": "long"}}, {"doc": "The field denotes whether the message relates to an INSERT event for the primary_key of the \U0000201Ctop-level entity\U0000201D of the topic being mastered in the system of record or is otherwise an UPDATE or DELETE event", "name": "event_type", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "The field denotes the name of the primary key being evaluated in the event_type field", "name": "event_type_key_name", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "The field denotes the incremental value associated with the evolution of the event metadata published on client specific topics", "name": "event_metadata_version", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "DingbatID as specified by the producing service", "name": "dingbat_key", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "Id which which associates this dingbat with a collection of other dingbats. The Id of the dingbat message wrapper", "name": "relation_key", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "Freebnort Key against which the dingbat is recorded", "logicalType": "uuid", "name": "freebnort_key", "type": {"avro.java.string": "String", "type": "string"}}, {"default": null, "doc": "dingbat id of the dingbat with which this particular dingbat is linked", "name": "linked_dingbat_id", "type": ["null", {"avro.java.string": "String", "type": "string"}]}, {"doc": "Whether the dingbat is a emu or wombat on the account", "name": "is_emu", "type": "boolean"}, {"doc": "Amount of the dingbat", "name": "amount", "type": {"logicalType": "decimal", "precision": 38, "scale": 3, "type": "bytes"}}, {"doc": "Latency of the dingbat", "name": "latency", "type": {"avro.java.string": "String", "type": "string"}}, {"default": null, "doc": "Balance of only posted dingbats upto and including this dingbat", "name": "posted_balance", "type": ["null", {"logicalType": "decimal", "precision": 38, "scale": 3, "type": "bytes"}]}, {"doc": "Timestamp indicating the time the dingbat was performed", "name": "dingbat_timestamp_utc", "type": {"logicalType": "timestamp-millis", "type": "long"}}, {"default": null, "doc": "Timestamp when the dingbat is applied", "name": "value_timestamp_utc", "type": ["null", {"logicalType": "timestamp-millis", "type": "long"}]}, {"doc": "Timestamp indicating when the dingbat was posted", "name": "posted_timestamp_utc", "type": {"logicalType": "timestamp-millis", "type": "long"}}, {"doc": "State of the dingbat", "name": "state", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "Dingbat type", "name": "type", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "ISO dingbat code for the dingbat", "name": "dingbat_code", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "Type of erudite message which was received", "name": "dingbat_msg_type", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "Who updated this entity", "name": "last_updated_by", "type": {"avro.java.string": "String", "type": "string"}}, {"default": null, "doc": "Header which was passed in the original erudite message", "name": "header_json", "type": ["null", {"avro.java.string": "String", "type": "string"}]}, {"default": null, "doc": "Source erudite message for this dingbat", "name": "json", "type": ["null", {"avro.java.string": "String", "type": "string"}]}, {"default": null, "doc": "Footer which was passed in the original erudite message", "name": "additional_info_json", "type": ["null", {"avro.java.string": "String", "type": "string"}]}, {"default": null, "name": "metadata", "type": ["null", {"doc": "Represents common event meta-data of interest", "fields": [{"doc": "Denotes the unique key for the message from this topic", "logicalType": "uuid", "name": "message_key", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "Timestamp value associated with the commit point in the platform when the message was committed to the service outbox pattern prior to publication to Kafka", "name": "outbox_published_date", "type": {"logicalType": "timestamp-millis", "type": "long"}}, {"doc": "The service timestamp value associated with the commit point in the platform database giving rise to the INSERT operation recorded in \'milliseconds since epoch\' format", "name": "created_date", "type": {"logicalType": "timestamp-millis", "type": "long"}}, {"doc": "The service timestamp value associated with the commit point in the platform database giving rise to the UPDATE or INSERT operation recorded in \'milliseconds since epoch\' format", "name": "updated_date", "type": {"logicalType": "timestamp-millis", "type": "long"}}, {"doc": "The field denotes whether the message relates to an INSERT event for the primary_key of the \U0000201Ctop-level entity\U0000201D of the topic being mastered in the system of record or is otherwise an UPDATE or DELETE event", "name": "event_type", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "The field denotes the name of the primary key being evaluated in the event_type field", "name": "event_type_key_name", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "The field denotes the incremental value associated with the evolution of the event metadata published on client specific topics", "name": "event_metadata_version", "type": {"avro.java.string": "String", "type": "string"}}], "name": "ClientEventMetadata", "type": "record"}]}, {"default": null, "name": "business_data_payload", "type": ["null", {"doc": "This event holds the customer view of the brouhaha and shows the customer dingbats on a freebnort", "fields": [{"doc": "The field denotes the name of the primary key being evaluated in the event_type field", "name": "dingbat_key", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "The key value which which associates this dingbat with a collection of other dingbats. The identifier of the dingbat message wrapper", "name": "relation_key", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "Freebnort Key against which the dingbat is recorded", "logicalType": "uuid", "name": "freebnort_key", "type": {"avro.java.string": "String", "type": "string"}}, {"default": null, "doc": "The foreign key value of a dingbat linked to this one - typically used for reversals/partial refunds where the original dingbat needs to be linked", "name": "linked_dingbat_id", "type": ["null", {"avro.java.string": "String", "type": "string"}]}, {"doc": "Whether the dingbat is a emu or wombat on the account", "name": "is_emu", "type": "boolean"}, {"doc": "Amount of the dingbat", "name": "amount", "type": {"logicalType": "decimal", "precision": 38, "scale": 3, "type": "bytes"}}, {"doc": "Latency of the dingbat", "name": "latency", "type": {"avro.java.string": "String", "type": "string"}}, {"default": null, "doc": "Balance of only posted dingbats upto and including this dingbat", "name": "posted_balance", "type": ["null", {"logicalType": "decimal", "precision": 38, "scale": 3, "type": "bytes"}]}, {"doc": "Timestamp indicating the time the dingbat was performed", "name": "dingbat_timestamp_utc", "type": {"logicalType": "timestamp-millis", "type": "long"}}, {"default": null, "doc": "Timestamp when the dingbat is applied", "name": "value_timestamp_utc", "type": ["null", {"logicalType": "timestamp-millis", "type": "long"}]}, {"doc": "Timestamp indicating when the dingbat was posted", "name": "posted_timestamp_utc", "type": {"logicalType": "timestamp-millis", "type": "long"}}, {"doc": "State of the dingbat", "name": "state", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "Dingbat type", "name": "type", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "ISO dingbat code for the dingbat", "name": "dingbat_code", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "Type of erudite message which was received", "name": "dingbat_msg_type", "type": {"avro.java.string": "String", "type": "string"}}, {"doc": "Who updated this entity", "name": "last_updated_by", "type": {"avro.java.string": "String", "type": "string"}}, {"default": null, "doc": "Header which was passed in the original erudite message", "name": "header_json", "type": ["null", {"avro.java.string": "String", "type": "string"}]}, {"default": null, "doc": "Source erudite message for this dingbat", "name": "json", "type": ["null", {"avro.java.string": "String", "type": "string"}]}, {"default": null, "doc": "Footer which was passed in the original erudite message", "name": "additional_info_json", "type": ["null", {"avro.java.string": "String", "type": "string"}]}, {"default": null, "doc": "The unique ID that has been internally assigned to represent the financial institution using the 10x platform", "name": "bell_key", "type": ["null", {"logicalType": "uuid", "type": "string"}]}], "name": "ClientDingbatDingbatPayload", "type": "record"}]}], "name": "ClientDingbatDingbatEvent", "namespace": "com.wobbles.event.corehard.brouhaha.dingbat", "type": "record"}', '960d42a8-21fb-4665-adc3-badd0bd406a2', 'us-west-1', 'brouhaha-manager', '2020-10-06 14:08:11.625+00:00', 'CR32', '5c3e8f7b', 'client-brouhaha-dingbat-event-v001', 'client-brouhaha-dingbat-event-v001', 'DONE', 1, {{.Iter}});

-- How long does a select take?
\benchmark loop \name 3_badSelect
USE loadtest; SELECT * FROM outbox_event WHERE status = 'PENDING' AND created_date < now() - interval '10s' ORDER BY created_date ASC LIMIT {{call .RandInt63}}

-- How long does an update of 1 row take?
\benchmark once \name 3_update1
USE loadtest; UPDATE outbox_event SET iterval = NULL WHERE iterval = 10000;
\benchmark once \name 3_update1a
USE loadtest; UPDATE outbox_event SET iterval = 10000 WHERE iterval IS NULL;

-- How long does an update of 10 rows take?
\benchmark once \name 3_update10
USE loadtest; UPDATE outbox_event SET iterval = NULL WHERE iterval >= 1000 AND iterval < 1010;
\benchmark once \name 3_update10a
USE loadtest; UPDATE outbox_event SET iterval = 10000 WHERE iterval IS NULL;

-- How long does an update of 100 rows take?
\benchmark once \name 3_update100
USE loadtest; UPDATE outbox_event SET iterval = NULL WHERE iterval >= 2000 AND iterval < 2100;
\benchmark once \name 3_update100a
USE loadtest; UPDATE outbox_event SET iterval = 10000 WHERE iterval IS NULL;

-- How long does an update of 1000 rows take?
\benchmark once \name 3_update1000
USE loadtest; UPDATE outbox_event SET iterval = NULL WHERE iterval >= 3000 AND iterval < 4000;
\benchmark once \name 3_update1000a
USE loadtest; UPDATE outbox_event SET iterval = 10000 WHERE iterval IS NULL;

-- test subselect
\benchmark once \name 3_updateSubSelect
USE loadtest; UPDATE outbox_event SET iterval = NULL WHERE message_key IN (SELECT message_key FROM outbox_event WHERE iterval = 10000);
\benchmark once \name 3_updateSubSelecta
USE loadtest; UPDATE outbox_event SET iterval = 10000 WHERE iterval IS NULL;

-- Does using an indexed NULL in the WHERE clause break the optimizer?
\benchmark once \name 3_indexedNullUpd
USE loadtest; UPDATE outbox_event SET iterval = NULL, updated_date = current_timestamp() WHERE iterval = 10000;
\benchmark once \name 3_indexedNullUpda
USE loadtest; UPDATE outbox_event SET updated_date = current_timestamp() WHERE iterval >= 4000 AND iterval < 5000;
\benchmark once \name 3_indexedNullUpdb
USE loadtest; UPDATE outbox_event SET iterval = 10000, updated_date = current_timestamp() WHERE iterval IS NULL;

\benchmark loop \name 3_indexedNullSel
USE loadtest; SELECT COUNT(*) FROM outbox_event WHERE topic_name = 'topic-does-not-exist' AND updated_date >= current_timestamp() - INTERVAL '24 hours';
\benchmark loop \name 3_indexedNullSela
USE loadtest; SELECT COUNT(*) FROM outbox_event WHERE topic_name = 'client-nostro-scheme-holding-dingbat-event-v001' AND updated_date >= current_timestamp() - INTERVAL '24 hours';
\benchmark loop \name 3_indexedNullSelb
USE loadtest; SELECT COUNT(*) FROM outbox_event WHERE topic_name = 'topic-does-not-exist' AND updated_date >= current_timestamp() - INTERVAL '24 hours' AND iterval IS NULL;
\benchmark loop \name 3_indexedNullSelc
USE loadtest; SELECT COUNT(*) FROM outbox_event WHERE topic_name = 'client-nostro-scheme-holding-dingbat-event-v001' AND updated_date >= current_timestamp() - INTERVAL '24 hours' AND iterval IS NULL;

-- Clean up
\benchmark once \name 3_clean
DROP DATABASE IF EXISTS loadtest;
